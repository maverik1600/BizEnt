/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package bizent;

import java.util.Date;
import java.util.Calendar;
import javax.swing.text.PlainDocument;

/**
 *
 * @author GustavoG
 */
public class AddTransfer extends javax.swing.JDialog {
    private Movimiento movOrigen;
    private Movimiento movDestino;

    public AddTransfer(java.awt.Frame parent, boolean modal, int id) {
        super(parent, modal);
        initComponents();

        Calendar calendar = Calendar.getInstance();
        cmbOrigen.setModel(BizEnt.db.getCuentasCmbModel());
        cmbDestino.setModel(BizEnt.db.getCuentasCmbModel());

        if (id == 0) {
            movOrigen  = new Movimiento(0, 0, null, null, null, "", 0);
            movDestino = new Movimiento(0, 0, null, null, null, "", 0);
        } else {
            /* Busco movimiento Origen y Destino */
            movOrigen = BizEnt.db.getMovimiento(id);
            if (movOrigen.getCategoria().getId() != 5) {
                movOrigen = BizEnt.db.getMovimiento(movOrigen.getIdMovRel());
            }
            movDestino = BizEnt.db.getMovimiento(movOrigen.getIdMovRel());

            cmbOrigen.getModel().setSelectedItem(movOrigen.getCuenta());
            cmbDestino.getModel().setSelectedItem(movDestino.getCuenta());

            txtMonto.setText(Double.toString(movOrigen.getMonto()));
            calendar.setTime(movOrigen.getFecha());
        }

        cmbDia.setSelectedIndex(calendar.get(Calendar.DAY_OF_MONTH) - 1);
        cmbMes.setSelectedIndex(calendar.get(Calendar.MONTH));
        cmbAno.setSelectedIndex(calendar.get(Calendar.YEAR) - 2010);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmbOrigen = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        cmbDestino = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        txtMonto = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        btnAceptar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cmbDia = new javax.swing.JComboBox();
        cmbMes = new javax.swing.JComboBox();
        cmbAno = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Cuenta de origen:");

        cmbOrigen.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Cuenta de destino:");

        cmbDestino.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Monto:");

        ((PlainDocument) txtMonto.getDocument()).setDocumentFilter(new CustDocumentFilter("^[0-9]*[.]{0,1}[0-9]{0,2}$"));

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        jLabel4.setText("Fecha:");

        cmbDia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        cmbMes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        cmbMes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbMesItemStateChanged(evt);
            }
        });
        cmbMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMesActionPerformed(evt);
            }
        });

        cmbAno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        cmbAno.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbAnoItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAceptar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCancelar))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmbOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnAceptar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        if (movOrigen.getId() == 0) {
            if (insertTransfer()) {
                return;
            }
        } else {
            if (updateTransfer()) {
                return;
            }
        }

       this.dispose();
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void cmbMesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMesItemStateChanged
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            checkDaysOfMonth();
        }
    }//GEN-LAST:event_cmbMesItemStateChanged

    private void cmbMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbMesActionPerformed

    private void cmbAnoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbAnoItemStateChanged
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            checkDaysOfMonth();
        }
    }//GEN-LAST:event_cmbAnoItemStateChanged

    private void checkDaysOfMonth() {
        int lastDayOfMonth = BizEnt.getLastDayOfMonth(cmbMes.getSelectedIndex(), Integer.parseInt(cmbAno.getSelectedItem().toString()));

        if (cmbDia.getItemCount() > lastDayOfMonth) {
            while (cmbDia.getItemCount() != lastDayOfMonth) {
                cmbDia.removeItemAt(cmbDia.getItemCount() - 1);
            }
        } else if (cmbDia.getItemCount() < lastDayOfMonth) {
            while (cmbDia.getItemCount() != lastDayOfMonth) {
                cmbDia.insertItemAt(cmbDia.getItemCount() + 1, cmbDia.getItemCount());
            }
        }
    }

    private Date getFecha() {
        Calendar calendar = Calendar.getInstance();
        
        calendar.set(Calendar.DAY_OF_MONTH, Integer.parseInt(cmbDia.getSelectedItem().toString()));
        calendar.set(Calendar.MONTH,        Integer.parseInt(cmbMes.getSelectedItem().toString()) - 1);
        calendar.set(Calendar.YEAR,         Integer.parseInt(cmbAno.getSelectedItem().toString()));
        
        return calendar.getTime();
    }

    private boolean insertTransfer() {
        /* Verifico cuenta origen y destino */
        if (cmbOrigen.getSelectedIndex() == cmbDestino.getSelectedIndex()) {
            BizEnt.showERROR(this, "La cuenta de origen y destino no puede ser la misma.");
            return true;
        }

        /* Actualizo el monto del movimiento */
        try {
            Double.parseDouble(txtMonto.getText());
        } catch (java.lang.NumberFormatException e) {
            BizEnt.showERROR(this, "El monto debe ser tipo numerico.");
            return true;
        }

        movOrigen.setFecha(this.getFecha());
        movDestino.setFecha(this.getFecha());

        movOrigen.setCategoria(BizEnt.db.getCategoria(5));
        movDestino.setCategoria(BizEnt.db.getCategoria(6));

        movOrigen.setCuenta((Cuenta) cmbOrigen.getModel().getElementAt(cmbOrigen.getSelectedIndex()));
        movDestino.setCuenta((Cuenta) cmbDestino.getModel().getElementAt(cmbDestino.getSelectedIndex()));

        movOrigen.setMonto(Double.parseDouble(txtMonto.getText()));
        movDestino.setMonto(Double.parseDouble(txtMonto.getText()));

        /* Insertamos el movimiento Origen */
        if (BizEnt.db.insertMovimiento(movOrigen)) {
            BizEnt.showERROR(this, "El movimiento no pudo ser agregado.");
        } else {
            movDestino.setIdMovRel(movOrigen.getId());
            if (BizEnt.db.insertMovimiento(movDestino)) {
                BizEnt.showERROR(this, "El movimiento no pudo ser agregado.");
            } else {
                movOrigen.setIdMovRel(movDestino.getId());
                if (BizEnt.db.updateMovimiento(movOrigen)) {
                    BizEnt.showERROR(this, "El movimiento no pudo ser actualizado.");
                }
            }
        }

        return false;
    }

    private boolean updateTransfer() {
        /* Verifico cuenta origen y destino */
        if (cmbOrigen.getSelectedItem().toString().equals(cmbDestino.getSelectedItem().toString())) {
            BizEnt.showERROR(this, "La cuenta de origen y destino no puede ser la misma.");
            return true;
        }

        /* Actualizo el monto del movimiento */
        try {
            Double.parseDouble(txtMonto.getText());
        } catch (java.lang.NumberFormatException e) {
            BizEnt.showERROR(this, "El monto debe ser tipo numerico.");
            return true;
        }

        movOrigen.setFecha(this.getFecha());
        movDestino.setFecha(this.getFecha());

        movOrigen.setCuenta((Cuenta) cmbOrigen.getSelectedItem());
        movDestino.setCuenta((Cuenta) cmbDestino.getSelectedItem());

        movOrigen.setMonto(Double.parseDouble(txtMonto.getText()));
        movDestino.setMonto(Double.parseDouble(txtMonto.getText()));
        
        /* Actualizamos el movimiento */
        if (BizEnt.db.updateMovimiento(movOrigen)) {
            BizEnt.showERROR(this, "El movimiento no pudo ser actualizado.");
        } else {
            if (BizEnt.db.updateMovimiento(movDestino)) {
                BizEnt.showERROR(this, "El movimiento no pudo ser actualizado.");
            }
        }
        
        return false;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JComboBox cmbAno;
    private javax.swing.JComboBox cmbDestino;
    private javax.swing.JComboBox cmbDia;
    private javax.swing.JComboBox cmbMes;
    private javax.swing.JComboBox cmbOrigen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtMonto;
    // End of variables declaration//GEN-END:variables
}
